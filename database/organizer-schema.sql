-- MySQL Script generated by MySQL Workbench
-- Tue 13 Jun 2017 10:56:21 AM COT
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema organizer
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema organizer
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `organizer` DEFAULT CHARACTER SET utf8 ;
USE `organizer` ;

-- -----------------------------------------------------
-- Table `organizer`.`projecttype`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `organizer`.`projecttype` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 0
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPACT;


-- -----------------------------------------------------
-- Table `organizer`.`project`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `organizer`.`project` (
  `id` INT(11) NOT NULL AUTO_INCREMENT COMMENT 'The reference of the project type table @projecttype',
  `projecttype_id` INT(11) NOT NULL,
  `name` VARCHAR(40) NOT NULL COMMENT 'The name of the project',
  `description` TEXT NULL COMMENT 'The description of the project',
  `status` TINYINT(1) NOT NULL COMMENT 'The current project status displayed in code\n\n0: Not started\n1: In progress\n2: Paused\n3: Cancelled\n4: To be approved\n5: Finished\n6: Unknown',
  `create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The time when the project was created',
  `update_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The time when the project was created or updated',
  `delete_time` DATETIME NULL COMMENT 'The time when the project was deleted',
  PRIMARY KEY (`id`, `projecttype_id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC),
  INDEX `fk_project_projecttype1_idx` (`projecttype_id` ASC),
  CONSTRAINT `fk_project_projecttype1`
    FOREIGN KEY (`projecttype_id`)
    REFERENCES `organizer`.`projecttype` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 0
DEFAULT CHARACTER SET = utf8
COMMENT = 'Projects can contain as many users and viceversa, all of the projects should be filtered by the status code';


-- -----------------------------------------------------
-- Table `organizer`.`task`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `organizer`.`task` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `project_id` INT(11) NOT NULL COMMENT 'The project reference for this task, the task should be only exclusive for the referenced project',
  `name` VARCHAR(40) NOT NULL COMMENT 'The name of the task, also the name of the @assignation',
  `description` TEXT NULL COMMENT 'The description of the task',
  `create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The time when the task is created',
  `update_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The time when the task is created or updated',
  `delete_time` DATETIME NULL COMMENT 'The time when the task is deleted',
  PRIMARY KEY (`id`, `project_id`),
  INDEX `fk_task_project1_idx` (`project_id` ASC),
  CONSTRAINT `fk_task_project1`
    FOREIGN KEY (`project_id`)
    REFERENCES `organizer`.`project` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 0
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `organizer`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `organizer`.`user` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(20) NOT NULL COMMENT 'The name of the user @username',
  `password` VARCHAR(50) NOT NULL COMMENT 'The password of the user, this should be hashed',
  `email` VARCHAR(30) NOT NULL COMMENT 'The e-mail of the user',
  `create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The time when the user was created',
  `update_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The time when the user was created or updated',
  `delete_time` DATETIME NULL,
  UNIQUE INDEX `name_UNIQUE` (`name` ASC),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 0
DEFAULT CHARACTER SET = utf8
COMMENT = 'This table contains all the information of the user, as it is going to be referenced by id from other tables on this database';


-- -----------------------------------------------------
-- Table `organizer`.`comment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `organizer`.`comment` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `user_id` INT(11) NOT NULL,
  `task_id` INT(11) NOT NULL COMMENT 'The reference of the task for this comment',
  `text` TEXT NOT NULL COMMENT 'The text of the comment',
  `status` TINYINT(1) NOT NULL COMMENT 'The status of the project in code.\n\n1: approved\n2: to be approved',
  `create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The time when the comment is created',
  `update_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The time when the comment is created or updated',
  `delete_time` DATETIME NULL,
  PRIMARY KEY (`id`, `user_id`, `task_id`),
  INDEX `fk_comment_task1_idx` (`task_id` ASC),
  INDEX `fk_comment_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_comment_task1`
    FOREIGN KEY (`task_id`)
    REFERENCES `organizer`.`task` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_comment_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `organizer`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 0
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `organizer`.`project_has_user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `organizer`.`project_has_user` (
  `project_id` INT(11) NOT NULL,
  `user_id` INT(11) NOT NULL,
  PRIMARY KEY (`project_id`, `user_id`),
  INDEX `fk_project_has_user_user1_idx` (`user_id` ASC),
  INDEX `fk_project_has_user_project1_idx` (`project_id` ASC),
  CONSTRAINT `fk_project_has_user_project1`
    FOREIGN KEY (`project_id`)
    REFERENCES `organizer`.`project` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_project_has_user_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `organizer`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'The reference table from user and project, this is used as a list of users assigned to a project, and projects assigned to a user';


-- -----------------------------------------------------
-- Table `organizer`.`assignation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `organizer`.`assignation` (
  `user_id` INT(11) NOT NULL COMMENT 'The reference to user',
  `project_id` INT(11) NOT NULL,
  `task_id` INT(11) NOT NULL COMMENT 'The reference to task',
  `create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The time when the assignation was created',
  `update_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'The time when the assignation was created or updated',
  PRIMARY KEY (`user_id`, `task_id`, `project_id`),
  INDEX `fk_task_has_user_user1_idx` (`user_id` ASC),
  INDEX `fk_task_has_user_task1_idx` (`task_id` ASC),
  INDEX `fk_task_has_user_project1_idx` (`project_id` ASC),
  CONSTRAINT `fk_task_has_user_task1`
    FOREIGN KEY (`task_id`)
    REFERENCES `organizer`.`task` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_task_has_user_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `organizer`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_task_has_user_project1`
    FOREIGN KEY (`project_id`)
    REFERENCES `organizer`.`task` (`project_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'Assignation table for users and tasks';


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `organizer`.`projecttype`
-- -----------------------------------------------------
START TRANSACTION;
USE `organizer`;
INSERT INTO `organizer`.`projecttype` (`id`, `name`) VALUES (DEFAULT, 'Informative');
INSERT INTO `organizer`.`projecttype` (`id`, `name`) VALUES (DEFAULT, 'Administrative');
INSERT INTO `organizer`.`projecttype` (`id`, `name`) VALUES (DEFAULT, 'Blog');
INSERT INTO `organizer`.`projecttype` (`id`, `name`) VALUES (DEFAULT, 'Social Network');

COMMIT;

